datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  admin
  manager
  customer
}

model Users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  email     String   @unique
  role      UserRole @default(manager)
  password  String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  brands    Brands[]
}

model Brands {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  usersId     String?  @db.ObjectId
  name        String
  description String?
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  user        Users?   @relation(fields: [usersId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Options {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  title       String
  description String?
  values      String[]
  categoryIds String[]     @db.ObjectId
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
  Categories  Categories[] @relation(fields: [categoryIds], references: [id])
}

model Categories {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  title         String
  description   String?
  optionIds     String[]      @db.ObjectId
  collectionIds String[]      @db.ObjectId
  updatedAt     DateTime      @updatedAt
  createdAt     DateTime      @default(now())
  Options       Options[]     @relation(fields: [optionIds], references: [id])
  Collections   Collections[] @relation(fields: [collectionIds], references: [id])
}

model Collections {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  title       String
  description String?
  categoryIds String[]     @db.ObjectId
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
  Categories  Categories[] @relation(fields: [categoryIds], references: [id])
}
